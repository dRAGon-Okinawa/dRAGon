plugins {
  id 'com.github.node-gradle.node' version '7.0.2'
  id 'org.openapi.generator' version '7.5.0'
}

ext {
    backendBuildDir = project(':backend').buildDir
}

task npmBuild(type: NpmTask) {
	inputs.dir("src")
	outputs.dir("dist")
	args = ['run', 'build']
}

task npmServe(type: NpmTask) {
	args = ['run', 'serve']
}

task test(type: NpmTask) {
	inputs.dir("src")
	outputs.dir("dist")
	args = ['run', 'build']
}

task buildOpenApiMarkdownDocs(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
	dependsOn(':backend:generateOpenApiDocs')
    generatorName.set("markdown")
	inputSpecRootDirectory.set("$backendBuildDir/docs/api")
	cleanupOutput.set(true)
	outputDir.set("$backendBuildDir/docs/api/markdown")
	doLast {
		delete "docs/api/specification"
		copy {
			from("$backendBuildDir/docs/api/markdown")
			into("docs/api/specification")
			filter {
				String line -> line
					.replace("[**Map**](../Models/object.md)", "**Map**")
					.replace("[**Object**](.md)", "**object**")
					.replace("{uuid}", "\\{uuid\\}")
					.replace("http://localhost:8080", "http://localhost:1985")
					.replace("# Documentation for merged spec", "# API Specification")
			}
		}
		delete "docs/api/specification/.openapi-generator"
		delete "docs/api/specification/.openapi-generator-ignore"
    }
}